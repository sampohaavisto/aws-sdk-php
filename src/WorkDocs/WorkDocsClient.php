<?php
namespace Aws3\WorkDocs;

use Aws3\AwsClient;

/**
 * This client is used to interact with the **Amazon WorkDocs** service.
 * @method \Aws3\Result abortDocumentVersionUpload(array $args = [])
 * @method \GuzzleHttp\Promise\Promise abortDocumentVersionUploadAsync(array $args = [])
 * @method \Aws3\Result activateUser(array $args = [])
 * @method \GuzzleHttp\Promise\Promise activateUserAsync(array $args = [])
 * @method \Aws3\Result addResourcePermissions(array $args = [])
 * @method \GuzzleHttp\Promise\Promise addResourcePermissionsAsync(array $args = [])
 * @method \Aws3\Result createFolder(array $args = [])
 * @method \GuzzleHttp\Promise\Promise createFolderAsync(array $args = [])
 * @method \Aws3\Result createNotificationSubscription(array $args = [])
 * @method \GuzzleHttp\Promise\Promise createNotificationSubscriptionAsync(array $args = [])
 * @method \Aws3\Result createUser(array $args = [])
 * @method \GuzzleHttp\Promise\Promise createUserAsync(array $args = [])
 * @method \Aws3\Result deactivateUser(array $args = [])
 * @method \GuzzleHttp\Promise\Promise deactivateUserAsync(array $args = [])
 * @method \Aws3\Result deleteDocument(array $args = [])
 * @method \GuzzleHttp\Promise\Promise deleteDocumentAsync(array $args = [])
 * @method \Aws3\Result deleteFolder(array $args = [])
 * @method \GuzzleHttp\Promise\Promise deleteFolderAsync(array $args = [])
 * @method \Aws3\Result deleteFolderContents(array $args = [])
 * @method \GuzzleHttp\Promise\Promise deleteFolderContentsAsync(array $args = [])
 * @method \Aws3\Result deleteNotificationSubscription(array $args = [])
 * @method \GuzzleHttp\Promise\Promise deleteNotificationSubscriptionAsync(array $args = [])
 * @method \Aws3\Result deleteUser(array $args = [])
 * @method \GuzzleHttp\Promise\Promise deleteUserAsync(array $args = [])
 * @method \Aws3\Result describeDocumentVersions(array $args = [])
 * @method \GuzzleHttp\Promise\Promise describeDocumentVersionsAsync(array $args = [])
 * @method \Aws3\Result describeFolderContents(array $args = [])
 * @method \GuzzleHttp\Promise\Promise describeFolderContentsAsync(array $args = [])
 * @method \Aws3\Result describeNotificationSubscriptions(array $args = [])
 * @method \GuzzleHttp\Promise\Promise describeNotificationSubscriptionsAsync(array $args = [])
 * @method \Aws3\Result describeResourcePermissions(array $args = [])
 * @method \GuzzleHttp\Promise\Promise describeResourcePermissionsAsync(array $args = [])
 * @method \Aws3\Result describeUsers(array $args = [])
 * @method \GuzzleHttp\Promise\Promise describeUsersAsync(array $args = [])
 * @method \Aws3\Result getDocument(array $args = [])
 * @method \GuzzleHttp\Promise\Promise getDocumentAsync(array $args = [])
 * @method \Aws3\Result getDocumentPath(array $args = [])
 * @method \GuzzleHttp\Promise\Promise getDocumentPathAsync(array $args = [])
 * @method \Aws3\Result getDocumentVersion(array $args = [])
 * @method \GuzzleHttp\Promise\Promise getDocumentVersionAsync(array $args = [])
 * @method \Aws3\Result getFolder(array $args = [])
 * @method \GuzzleHttp\Promise\Promise getFolderAsync(array $args = [])
 * @method \Aws3\Result getFolderPath(array $args = [])
 * @method \GuzzleHttp\Promise\Promise getFolderPathAsync(array $args = [])
 * @method \Aws3\Result initiateDocumentVersionUpload(array $args = [])
 * @method \GuzzleHttp\Promise\Promise initiateDocumentVersionUploadAsync(array $args = [])
 * @method \Aws3\Result removeAllResourcePermissions(array $args = [])
 * @method \GuzzleHttp\Promise\Promise removeAllResourcePermissionsAsync(array $args = [])
 * @method \Aws3\Result removeResourcePermission(array $args = [])
 * @method \GuzzleHttp\Promise\Promise removeResourcePermissionAsync(array $args = [])
 * @method \Aws3\Result updateDocument(array $args = [])
 * @method \GuzzleHttp\Promise\Promise updateDocumentAsync(array $args = [])
 * @method \Aws3\Result updateDocumentVersion(array $args = [])
 * @method \GuzzleHttp\Promise\Promise updateDocumentVersionAsync(array $args = [])
 * @method \Aws3\Result updateFolder(array $args = [])
 * @method \GuzzleHttp\Promise\Promise updateFolderAsync(array $args = [])
 * @method \Aws3\Result updateUser(array $args = [])
 * @method \GuzzleHttp\Promise\Promise updateUserAsync(array $args = [])
 */
class WorkDocsClient extends AwsClient {}
